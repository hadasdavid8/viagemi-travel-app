# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  DOCKER_HUB_REPO_BACKEND: hadasdavid8/travelapp-backend

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3


      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Build Frontend
        run: |
          cd frontend
          npm run build

      - name: Clean and Deploy Frontend static files via SSH (SCP)
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script_before: |
            echo "Cleaning existing Frontend files on server..."
            sudo rm -rf /var/www/html/* # מחיקת כל הקבצים הישנים בתיקיית ה-Nginx
            echo "Existing Frontend files cleaned."
          source: "./frontend/build/"
          target: "/var/www/html/"
          script: |
            echo "Frontend files copied. Reloading Nginx..."
            sudo systemctl reload nginx
            echo "Nginx reloaded."

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ env.DOCKER_HUB_REPO_BACKEND }}:latest

      - name: Deploy Backend via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "Deploying Backend..."
            cd /opt/TravelApp 
            docker-compose pull
            docker-compose up -d --remove-orphans 
            docker image prune -f
            echo "Backend deployed."